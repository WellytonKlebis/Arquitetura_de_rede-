AWSTemplateFormatVersion: 2010-09-09
Description: "Stack para provisionar um app na subnet privada com exemplo de referencia"

# Esse template cria:
#Amazon EC2 instance
# Security Group


Parameters:
  NetworkStackName:
    Description: "Nome da stack do Cloudformation com os recurso de rede"
    Type: String
    MinLength: 1 
    MaxLenhth: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-z0-9]*$'
    Default: NetworkVPC

  AmazonLinuxAMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resource:
  
  WebServerInstance:
    Type: AWS::EC2::Instance
    Metadata:
       'AWS::CloudFormation::Init':
         configSets:
           All:
             - ConfigureSampleApp
         ConfigureSampleApp:
            packages:
             yum:
               httpd: []
            files:
              /var/www/html/index.html:
                content: |
                  <img src="https://s3.amazonaws.com/cloudformation-examples/cloudformation_graphic.png" alt="AWS CloudFormation Logo"/>
                  <h1> PARABENS!!! Voce conseguiu subir a aplicação do cloudformation </h1>
                mode: 000644
                owner: apache
                group: apache
            services:
                httpd:
                   enable: true
                   ensureRunning: true 
    Properties:
      InstanceType: t2.micro
      imageId: !Ref AmazonLinuxAMIID
      NetworkInterfaces:
        - GroupSet:
           - !Ref WebServerSecurityGroup
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOntermination: true
          SubnetId:
            Fn::ImportValue:
              !Sub us-east-1-${NetworkStackName}-NetworVPC-PublicSubnet0
              
      Tags:
        - Key: Name
          Value: Web Server
      UserData:
        Fn::Base64: !Sub |     
          #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap
          # install the files and packages from the metadata 
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource webSeverInstance --configset All --region ${AWS::Region}
          # Signal the  status from cfn-init 
          /opt/aws/bin/cfn-sgnal -e $ --stack ${AWS::StackName} --resource webServerInstance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        imeout: PT5M

  DiskVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      AvailabilityZone: !GetAtt webServerInstance.AvailabilityZone
      Tags:
        - Key: Name
          Value: Web Data
    DeletionPolicy: Snapshot

  DiskMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref WebServerInstance
      VolumeId: !Ref DiskVolume
      Device: /dev/sdh

  WebServerSecurityGroup:
    Type: AWS::EC2::DefaultSecurityGroup
    Properties:
      GroupDescription: Enable HTTP ingress
      VpcId: 
        Fn::ImportValue:
          !Sub ${NetworkStackName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - key: Name
          Value: Web ServerSecurity Group 
          
            
